from getpass import getpass
import hashlib
import re
import sqlite3
from User import User


class LoginManager:
    def __init__(self):
        self.connection = sqlite3.connect("test_db.db")
        self.cursor = self.connection.cursor()
        self.cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        if (self.cursor.fetchone()[0] != 'USER'):
            print("No accounts found.")
            exit()
    
    def login(self):
        user = User()
        tries = 0
        email_input = ''
        pwd_input = ''
        valid_credentials = False
        while (not valid_credentials and tries < 3):
            email_input = input("Enter email:\n> ")
            while (not self.check_valid_email(email_input)):
                print("Invalid email. Try again.")
                email_input = input("Enter e-mail address:\n> ")
            user.setEmail(email_input)
            pwd_input = getpass("Enter password:\n> ")
            hashed_passwd = hashlib.sha256(pwd_input.encode()).hexdigest()
            user.setHashedPasswd(hashed_passwd)
            tries += 1
            valid_credentials = self.findUser(user)
        return valid_credentials or tries != 3

    def check_valid_email(self, email):
        regex = re.compile(r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+')
        return re.fullmatch(regex, email)
    
    def findUser(self, user: User):
        sql_query = 'SELECT * FROM user WHERE email=? and pwd=?;'
        user_to_find = (
            user.email,
            user.hashedpwd
        )
        self.cursor.execute(sql_query, user_to_find)
        if (self.cursor.fetchall() == []):
            print("Invalid credentials.")
            return False
        return True
    
